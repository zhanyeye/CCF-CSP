#include <iostream>
#include <cstring>
#define LL long long
using namespace std;    


// 这题是典型的数位dp， 将其分为6种状态如下：

// 1. 只含2            =>   222_2
// 2. 只含2、0         =>   222_0、  2020_2、 2020_0
// 3. 只含2、3         =>   2333_3、222_3
// 4. 只含2、0、1      =>   2200_1、220011_2、220011_1
// 5. 只含2、0、3      =>   2233_0、2200_3、223300_0、223300_3
// 6. 含4种数字        =>    201_3、203_1、2013_3、 2013_1、2031_1、2031_3


const int MOD = 1000000007;
LL dp[1001][7];

int main() {
    int n;
    cin >> n;
    memset(dp, 0, sizeof dp);
    for (int i = 1; i <= n; i++) { //dp[i][j] 表示位数为 i，符合状态 j 的（6种）合法的数的个数。
        dp[i][1] = 1; // 2
        dp[i][2] = (dp[i-1][1] + dp[i-1][2] * 2) % MOD; // 2 0
        dp[i][3] = (dp[i-1][1] + dp[i-1][3]) % MOD; // 2 3
        dp[i][4] = (dp[i-1][2] + dp[i-1][4] * 2) % MOD; // 2 0 1
        dp[i][5] = (dp[i-1][2] + dp[i-1][3] + dp[i-1][5] * 2) % MOD; // 2 3 0
        dp[i][6] = (dp[i-1][4] + dp[i-1][5] + dp[i-1][6] * 2) % MOD; // 0 1 2 3
    }
    cout << dp[n][6] << endl;
}